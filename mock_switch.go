// Code generated by MockGen. DO NOT EDIT.
// Source: pwm.go

// Package mock_main is a generated GoMock package.
package pidtemp

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSwitch is a mock of Switch interface
type MockSwitch struct {
	ctrl     *gomock.Controller
	recorder *MockSwitchMockRecorder
}

// MockSwitchMockRecorder is the mock recorder for MockSwitch
type MockSwitchMockRecorder struct {
	mock *MockSwitch
}

// NewMockSwitch creates a new mock instance
func NewMockSwitch(ctrl *gomock.Controller) *MockSwitch {
	mock := &MockSwitch{ctrl: ctrl}
	mock.recorder = &MockSwitchMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSwitch) EXPECT() *MockSwitchMockRecorder {
	return m.recorder
}

// On mocks base method
func (m *MockSwitch) On() {
	m.ctrl.Call(m, "On")
}

// On indicates an expected call of On
func (mr *MockSwitchMockRecorder) On() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "On", reflect.TypeOf((*MockSwitch)(nil).On))
}

// Off mocks base method
func (m *MockSwitch) Off() {
	m.ctrl.Call(m, "Off")
}

// Off indicates an expected call of Off
func (mr *MockSwitchMockRecorder) Off() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Off", reflect.TypeOf((*MockSwitch)(nil).Off))
}
